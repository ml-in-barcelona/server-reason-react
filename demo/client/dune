(env
 (_
  (env-vars
   ("DEMO_ENV" "development"))))

(install
 (section bin)
 (enabled_if
  (= %{profile} dev))
 (files
  ("./node_modules/@tailwindcss/cli/dist/index.mjs" as tailwind)))

(melange.emit
 (enabled_if
  (= %{profile} dev))
 (target app)
 (module_systems
  (es6 re.js))
 (libraries
  melange
  reason-react
  melange.dom
  melange-webapi
  url_js
  melange-fetch
  demo_shared_js)
 (preprocess
  (pps browser_ppx -js reason-react-ppx melange.ppx)))

(rule
 (enabled_if
  (= %{profile} dev))
 (alias client)
 (deps
  (package server-reason-react)
  (alias_rec melange)
  (:script build.mjs)
  (:entrypoints
   "app/demo/client/Hydrate.re.js"
   "app/demo/client/CreateFromReadableStream.re.js"
   "app/demo/client/CreateFromFetch.re.js"
   "app/demo/client/ClientRouter.re.js")
  (source_tree node_modules)
  (file package.json)
  (source_tree ../../packages/extract-client-components))
 (action
  (run
   node
   %{script}
   %{entrypoints}
   --output=app/demo/client/
   --extract=true
   --env=%{env:DEMO_ENV='production'}
   --mock-webpack-require=true)))

(subdir
 app
 (subdir
  demo
  (rule
   (target output.css)
   (enabled_if
    (= %{profile} dev))
   (alias client)
   (deps
    (source_tree ../../../)
    (source_tree ../../../server)
    (:config ./../../tailwind.config.js)
    (:input ./../../styles.css))
   (action
    (progn
     (run tailwind -c %{config} -i %{input} -o %{target}))))))
