(melange.emit
 (enabled_if
  (= %{profile} dev))
 (target app)
 (module_systems
  (es6 re.js))
 (libraries
  melange
  reason-react
  melange.dom
  melange-webapi
  url_js
  melange-fetch
  demo_shared_js)
 (preprocess
  (pps browser_ppx -js reason-react-ppx melange.ppx)))

(rule
 (enabled_if
  (= %{profile} dev))
 (alias client)
 (deps
  (package server-reason-react)
  (alias_rec melange)
  (:script build.mjs)
  (:entrypoints
   "app/demo/client/Hydrate.re.js"
   "app/demo/client/CreateFromReadableStream.re.js"
   "app/demo/client/CreateFromFetch.re.js"
   "app/demo/client/ClientRouter.re.js")
  (source_tree node_modules)
  (file package.json)
  (source_tree ../../packages/extract-client-components))
 (action
  (progn
   (run
    node
    %{script}
    %{entrypoints}
    --output=app/demo/client/
    --extract=true
    --mock-webpack-require=true))))

;; create-from-fetch.jsx

; (rule
; (enabled_if
; (= %{profile} dev))
; (alias client)
; (deps
; (package server-reason-react)
; (alias_rec melange)
; (:input create-from-fetch.jsx)
; (:script build.mjs)
; (file package.json)
; (source_tree node_modules))
; (action
; (progn
; (run
; node
; %{script}
; --input=%{input}
; --output=app/demo/client/create-from-fetch.js
; --mock-webpack-require=true))))

;; router.jsx

; (rule
; (enabled_if
; (= %{profile} dev))
; (alias client)
; (deps
; (package server-reason-react)
; (alias_rec melange)
; (:input router.jsx)
; (:script build.mjs)
; (file package.json)
; (source_tree node_modules)
; (source_tree ../../demo/universal/native)
; (source_tree ../../packages/extract-client-components))
; (action
; (progn
; (run
; node
; %{script}
; --input=%{input}
; --output=app/demo/client/router.js
; --extract=true
; --mock-webpack-require=true))))
