name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  OPAM_VERSION: 2.3.0
  DUNE_PROFILE: release
  OCAMLRUNPARAM: b

permissions:
  contents: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

defaults:
  run:
    shell: bash -xeuo pipefail {0}

jobs:
  build:
    name: Build and test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest
        ocaml-compiler:
          - 5.2.0

    steps:
      - uses: actions/checkout@v4

      - name: Install openssl
        if: matrix.os == 'macos-latest'
        run: |
          pkg-config --modversion openssl

      - name: Load npm cache
        id: npm-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            demo/node_modules
            demo/client/node_modules
          key: npm-${{ matrix.os }}-${{ hashFiles('demo/package.json') }}-${{ hashFiles('demo/client/package.json') }}

      - name: Load opam cache when not Windows
        id: opam-cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3.2.5
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          opam-disable-sandboxing: true

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: demo/client/

      - name: Install opam deps
        run: make install

      - name: Install npm deps
        run: make install-npm

      - name: Pin dependencies
        run: make pin

      - name: Build
        run: make build

      - name: Check formatting
        run: make format-check

      - name: Run tests
        run: make test

      - name: Generate docs
        if: github.ref == 'refs/heads/main'
        run: make docs

      - name: Publish docs
        uses: crazy-max/ghaction-github-pages@v1
        if: github.ref == 'refs/heads/main'
        with:
          target_branch: gh-pages
          build_dir: _html
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run benchmarks
        run: make bench

      - name: Save npm cache
        uses: actions/cache/save@v4
        with:
          path: |
            demo/node_modules
            demo/client/node_modules
          key: npm-${{ matrix.os }}-${{ hashFiles('demo/package.json') }}-${{ hashFiles('demo/client/package.json') }}

      - name: Save cache when not Windows
        uses: actions/cache/save@v4
        if: steps.opam-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}
